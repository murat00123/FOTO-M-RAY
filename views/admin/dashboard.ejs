<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - MİRAY PHOTOGRAPHY</title>
    <link rel="stylesheet" href="/css/admin.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="admin-body">
    <div class="admin-container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-header">
                                 <img src="/images/miray-logo.png" alt="MİRAY PHOTOGRAPHY" class="sidebar-logo">
                <h2>Admin Panel</h2>
            </div>
            
            <nav class="sidebar-nav">
                <ul>
                    <li class="nav-item active">
                        <a href="#content" class="nav-link" onclick="showTab('content')">
                            <i class="fas fa-edit"></i>
                            İçerik Düzenle
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#photos" class="nav-link" onclick="showTab('photos')">
                            <i class="fas fa-images"></i>
                            Fotoğraf Yönetimi
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/" class="nav-link" target="_blank">
                            <i class="fas fa-external-link-alt"></i>
                            Siteyi Görüntüle
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/admin/logout" class="nav-link">
                            <i class="fas fa-sign-out-alt"></i>
                            Çıkış Yap
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <!-- Header -->
            <header class="content-header">
                <h1>Dashboard</h1>
                <div class="header-actions">
                    <span class="welcome">Hoş geldiniz, Admin</span>
                    <a href="/admin/logout" class="btn btn-outline">Çıkış</a>
                </div>
            </header>

            <!-- Content Management Tab -->
            <div id="content" class="tab-content active">
                <div class="content-section">
                    <h2>İçerik Düzenleme</h2>
                    <p class="section-description">Web sitenizin genel metinlerini ve iletişim bilgilerini buradan yönetebilirsiniz.</p>
                    
                    <form id="contentUpdateForm" method="POST" action="/admin/update-content" class="admin-form">
                        
                        <div class="content-cards-container">
                            <!-- Ana Sayfa Ayarları -->
                            <div class="content-card">
                                <div class="content-card-header">
                                    <span><i class="fas fa-home"></i> Ana Sayfa Alt Başlık</span>
                                </div>
                                <div class="content-card-body">
                                    <div class="form-grid">
                                        <div class="form-group full-width">
                                            <label for="heroSubtitle">Alt Başlık</label>
                                            <input type="text" id="heroSubtitle" name="heroSubtitle" value="<%= content.heroSubtitle %>" required>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Hakkımda Ayarları -->
                            <div class="content-card">
                                <div class="content-card-header">
                                    <span><i class="fas fa-user-circle"></i> Hakkımda Sayfası</span>
                                </div>
                                <div class="content-card-body">
                                    <div class="form-grid">
                                        <div class="form-group full-width">
                                            <label for="aboutTitle">Hakkımda Başlığı</label>
                                            <input type="text" id="aboutTitle" name="aboutTitle" value="<%= content.aboutTitle %>" required>
                                        </div>
                                        <div class="form-group full-width">
                                            <label for="aboutText">Hakkımda Metni</label>
                                            <textarea id="aboutText" name="aboutText" rows="6" required><%= content.aboutText %></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- İletişim Bilgileri Ayarları -->
                            <div class="content-card">
                                <div class="content-card-header">
                                    <span><i class="fas fa-address-book"></i> İletişim Bilgileri & Sosyal Medya</span>
                                </div>
                                <div class="content-card-body">
                                    <div class="form-grid">
                                        <div class="form-group full-width" id="phone-fields-container">
                                            <label>Telefon Numaraları</label>
                                            <% content.contactPhones.forEach((phone, index) => { %>
                                                <div class="phone-input-group">
                                                    <input type="tel" name="contactPhones[]" value="<%= phone %>" placeholder="Telefon Numarası" required>
                                                    <button type="button" class="btn-remove-field" onclick="removeField(this, 'phone')">Kaldır</button>
                                                </div>
                                            <% }); %>
                                            <button type="button" class="btn-add-field" onclick="addField(event, 'phone')">
                                                <i class="fas fa-plus-circle"></i> Yeni Telefon Ekle
                                            </button>
                                        </div>
                            
                                        <div class="form-group full-width" id="email-fields-container">
                                            <label>İletişim E-posta Adresleri</label>
                                            <% content.contactEmails.forEach((email, index) => { %>
                                                <div class="email-input-group">
                                                    <input type="email" name="contactEmails[]" value="<%= email %>" placeholder="E-posta Adresi" required>
                                                    <button type="button" class="btn-remove-field" onclick="removeField(this, 'email')">Kaldır</button>
                                                </div>
                                            <% }); %>
                                            <button type="button" class="btn-add-field" onclick="addField(event, 'email')">
                                                <i class="fas fa-plus-circle"></i> Yeni E-posta Ekle
                                            </button>
                                        </div>

                                        <div class="form-group">
                                            <label for="contactAddressShort">Kısa Adres (Footer)</label>
                                            <input type="text" id="contactAddressShort" name="contactAddressShort" value="<%= content.contactAddressShort %>" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="contactAddressFull">Tam Adres (İletişim Sayfası)</label>
                                            <input type="text" id="contactAddressFull" name="contactAddressFull" value="<%= content.contactAddressFull %>" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="contactGoogleMapsUrl">Google Harita URL</label>
                                            <input type="url" id="contactGoogleMapsUrl" name="contactGoogleMapsUrl" value="<%= content.contactGoogleMapsUrl %>" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="instagramUrl">Instagram URL</label>
                                            <input type="url" id="instagramUrl" name="instagramUrl" value="<%= content.instagramUrl %>" required>
                                        </div>
                                        <div class="form-group">
                                            <label for="instagramUsername">Instagram Kullanıcı Adı</label>
                                            <input type="text" id="instagramUsername" name="instagramUsername" value="<%= content.instagramUsername %>" required>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Çalışma Saatleri Ayarları -->
                            <div class="content-card">
                                <div class="content-card-header">
                                    <span><i class="fas fa-clock"></i> Çalışma Saatleri</span>
                                </div>
                                <div class="content-card-body">
                                    <div class="working-hours-grid">
                                        <% content.workingHours.forEach((wh, index) => { %>
                                            <div class="working-hours-row">
                                                <label for="wh_hours_<%= index %>" class="day-label"><%= wh.day %></label>
                                                <input type="hidden" name="workingHours[<%= index %>][day]" value="<%= wh.day %>">
                                                <input type="text" id="wh_hours_<%= index %>" name="workingHours[<%= index %>][hours]" value="<%= wh.hours %>" required>
                                            </div>
                                        <% }); %>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i>
                                Tüm Değişiklikleri Kaydet
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Photo Management Tab -->
            <div id="photos" class="tab-content">
                <div class="content-section">
                    <h2>Fotoğraf Yönetimi</h2>
                    
                    <!-- Upload Form -->
                    <div class="upload-section">
                        <h3>Yeni Fotoğraf Yükle</h3>
                        <form id="photoUploadForm" method="POST" action="/admin/upload-photo" enctype="multipart/form-data" class="upload-form">
                            <div class="form-grid">
                                <div class="form-group">
                                    <label for="photo">Fotoğraf Seç</label>
                                    <input type="file" id="photo" name="photo" accept="image/*" required>
                                </div>
                                
                                <div class="form-group">
                                    <label for="title">Başlık</label>
                                    <input type="text" id="title" name="title">
                                </div>
                                
                                <div class="form-group full-width">
                                    <label for="description">Açıklama</label>
                                    <textarea id="description" name="description" rows="2"></textarea>
                                </div>
                            </div>
                            
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-upload"></i>
                                Fotoğraf Yükle
                            </button>
                        </form>
                    </div>

                    <!-- Photos Grid -->
                    <div class="photos-section">
                        <h3 id="photos-count">Mevcut Fotoğraflar (<%= photos.length %>)</h3>
                        <% if (photos && photos.length > 0) { %>
                            <form method="POST" action="/admin/manage-photos" id="managePhotosForm">
                                <input type="hidden" name="action" id="photoAction">
                                <div id="hidden-inputs-container"></div>

                                <div class="photo-management-actions">
                                    <div id="initial-actions">
                                        <button type="button" class="btn btn-action" id="btn-enter-featured-mode">
                                            <i class="fas fa-star"></i> Öne Çıkanları Güncelle
                                        </button>
                                        <button type="button" class="btn btn-action btn-danger" id="btn-enter-delete-mode">
                                            <i class="fas fa-trash-alt"></i> Sil
                                        </button>
                                    </div>
                                    <div id="selection-actions" style="display: none;">
                                        <p id="selection-message" class="selection-message"></p>
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-save"></i> Değişiklikleri Kaydet
                                        </button>
                                        <button type="button" class="btn btn-secondary" id="btn-cancel-selection">
                                            <i class="fas fa-times"></i> İptal Et
                                        </button>
                                    </div>
                                </div>

                                <div class="photos-grid" id="photosGrid">
                                    <% photos.forEach(photo => { %>
                                        <div class="photo-card selectable" data-photo-id="<%= photo.id %>">
                                            <% if (photo.featured) { %>
                                                <div class="featured-badge"><i class="fas fa-star"></i></div>
                                            <% } %>
                                            <img src="/uploads/gallery/<%= photo.filename %>" alt="<%= photo.title %>">
                                            <div class="photo-info">
                                                <h4><%= photo.title || '' %></h4>
                                                <p><%= photo.description || '' %></p>
                                                <small>Yüklenme: <%= new Date(photo.uploadDate).toLocaleDateString('tr-TR') %></small>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            </form>
                        <% } else { %>
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i>
                                Henüz hiç fotoğraf yüklenmemiş.
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <div id="toast-container"></div>

    <script>
        function showTab(tabId) {
            document.querySelectorAll('.tab-content').forEach(tab => tab.classList.remove('active'));
            document.getElementById(tabId).classList.add('active');
            document.querySelectorAll('.nav-item').forEach(item => item.classList.remove('active'));
            document.querySelector(`.nav-link[href="#${tabId}"]`).parentElement.classList.add('active');
        }

        // Auto-hide alerts after 5 seconds
        setTimeout(() => {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                alert.style.opacity = '0';
                setTimeout(() => alert.style.display = 'none', 500);
            });
        }, 5000);

        function addField(event, type) {
            event.preventDefault();
            const containerId = type === 'phone' ? 'phone-fields-container' : 'email-fields-container';
            const container = document.getElementById(containerId);
            const inputGroup = document.createElement('div');
            inputGroup.className = type === 'phone' ? 'phone-input-group' : 'email-input-group';
            inputGroup.innerHTML = `
                <input type="${type === 'phone' ? 'tel' : 'email'}" name="contact${type.charAt(0).toUpperCase() + type.slice(1)}s[]" placeholder="${type === 'phone' ? 'Telefon Numarası' : 'E-posta Adresi'}" required>
                <button type="button" class="btn-remove-field" onclick="removeField(this, '${type}')">Kaldır</button>
            `;
            container.appendChild(inputGroup);
        }

        function removeField(button, type) {
            button.parentElement.remove();
        }

        // Toast Notification Logic
        function showToast(message, isError = false) {
            const container = document.getElementById('toast-container');
            const toast = document.createElement('div');
            toast.className = `toast ${isError ? 'error' : ''}`;
            toast.innerHTML = `<i class="fas ${isError ? 'fa-exclamation-circle' : 'fa-check-circle'}"></i> ${message}`;
            
            container.appendChild(toast);
            
            setTimeout(() => toast.classList.add('show'), 100);

            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => container.removeChild(toast), 500);
            }, 3000);
        }

        // Main script execution on DOMContentLoaded
        document.addEventListener('DOMContentLoaded', () => {
            // AJAX for Content Update Form
            const contentUpdateForm = document.getElementById('contentUpdateForm');
            if(contentUpdateForm) {
                contentUpdateForm.addEventListener('submit', async (e) => {
                    e.preventDefault();
                    const btn = e.submitter;
                    btn.disabled = true;
                    btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Kaydediliyor...';
                    
                    const formData = new FormData(contentUpdateForm);
                    const data = {};
                    formData.forEach((value, key) => {
                        if (key.endsWith('[]')) {
                            const newKey = key.slice(0, -2);
                            if (!data[newKey]) data[newKey] = [];
                            data[newKey].push(value);
                        } else {
                            data[key] = value;
                        }
                    });

                    // Correctly structure workingHours
                    data.workingHours = Array.from(document.querySelectorAll('.working-hours-row')).map(row => ({
                        day: row.querySelector('.day-label').innerText,
                        hours: row.querySelector('input[name*="[hours]"]').value
                    }));

                    try {
                        const response = await fetch('/admin/update-content', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(data)
                        });
                        const result = await response.json();
                        showToast(result.message, !result.success);
                    } catch (err) {
                        showToast('Bir ağ hatası oluştu.', true);
                    } finally {
                        btn.disabled = false;
                        btn.innerHTML = '<i class="fas fa-save"></i> Değişiklikleri Kaydet';
                    }
                });
            }

            // AJAX for Photo Upload Form
            const photoUploadForm = document.getElementById('photoUploadForm');
            if(photoUploadForm) {
                photoUploadForm.addEventListener('submit', async (e) => {
                    e.preventDefault();
                    const btn = e.submitter;
                    btn.disabled = true;
                    btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Yükleniyor...';
                    
                    const formData = new FormData(photoUploadForm);
                    try {
                        const response = await fetch('/admin/upload-photo', { method: 'POST', body: formData });
                        const result = await response.json();
                        showToast(result.message, !result.success);
                        
                        if(result.success && result.photo) {
                            addPhotoToGrid(result.photo);
                            photoUploadForm.reset();
                        }
                    } catch (err) {
                        showToast('Fotoğraf yüklenirken bir hata oluştu.', true);
                    } finally {
                        btn.disabled = false;
                        btn.innerHTML = '<i class="fas fa-upload"></i> Fotoğraf Yükle';
                    }
                });
            }
            
            // Photo Management Logic
            const photosGrid = document.getElementById('photosGrid');
            const photoActionInput = document.getElementById('photoAction');
            const initialActions = document.getElementById('initial-actions');
            const selectionActions = document.getElementById('selection-actions');
            const selectionMessage = document.getElementById('selection-message');
            
            let currentMode = null; // 'featured' or 'delete'

            const enterSelectionMode = (mode) => {
                currentMode = mode;
                photosGrid.classList.add('selection-active');
                initialActions.style.display = 'none';
                selectionActions.style.display = 'flex';
                if (mode === 'updateFeatured') {
                    selectionMessage.textContent = 'Öne çıkarılacak fotoğrafları seçin.';
                    document.querySelectorAll('.photo-card[data-photo-id]').forEach(card => {
                        if (card.querySelector('.featured-badge')) {
                            card.classList.add('selected-featured');
                        }
                    });
                } else {
                    selectionMessage.textContent = 'Silinecek fotoğrafları seçin.';
                }
            };

            window.cancelSelectionMode = () => {
                currentMode = null;
                photosGrid.classList.remove('selection-active');
                document.querySelectorAll('.photo-card.selected-featured, .photo-card.selected-delete').forEach(card => {
                    card.classList.remove('selected-featured', 'selected-delete');
                });
                initialActions.style.display = 'flex';
                selectionActions.style.display = 'none';
            };
            
            window.handlePhotoClick = (card) => {
                if (!currentMode) return;
                
                if (currentMode === 'updateFeatured') {
                    card.classList.toggle('selected-featured');
                } else if (currentMode === 'delete') {
                    card.classList.toggle('selected-delete');
                }
            };

            document.getElementById('btn-enter-featured-mode').addEventListener('click', () => enterSelectionMode('updateFeatured'));
            document.getElementById('btn-enter-delete-mode').addEventListener('click', () => enterSelectionMode('delete'));
            document.getElementById('btn-cancel-selection').addEventListener('click', cancelSelectionMode);
            
            document.querySelectorAll('.photo-card.selectable').forEach(card => {
                card.addEventListener('click', () => handlePhotoClick(card));
            });

            // AJAX for Photo Management Form
            const managePhotosForm = document.getElementById('managePhotosForm');
            if(managePhotosForm) {
                managePhotosForm.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    const btn = e.submitter;
                    btn.disabled = true;
                    btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Kaydediliyor...';
                    
                    photoActionInput.value = currentMode;
                    const action = currentMode;
                    const selectedIds = Array.from(document.querySelectorAll(`.photo-card.selected-${action === 'updateFeatured' ? 'featured' : 'delete'}`))
                                           .map(card => card.dataset.photoId);

                    try {
                        const response = await fetch('/admin/manage-photos', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ action, photoIds: selectedIds })
                        });
                        const result = await response.json();
                        showToast(result.message, !result.success);

                        if (result.success) {
                            handlePhotoManagementUpdate(result.action, result.photoIds);
                        } else {
                            cancelSelectionMode();
                        }
                    } catch (err) {
                        showToast('İşlem sırasında bir hata oluştu.', true);
                        cancelSelectionMode();
                    } finally {
                        btn.disabled = false;
                        btn.innerHTML = '<i class="fas fa-save"></i> Değişiklikleri Kaydet';
                    }
                });
            }

            // Dinamik olarak eklenen "Kaldır" butonları için olay delegasyonu
            document.addEventListener('click', function(e) {
                if (e.target && e.target.classList.contains('btn-remove-field')) {
                    const group = e.target.closest('.phone-input-group, .email-input-group');
                    if (group) {
                        group.remove();
                    }
                }
            });

            // Sayfa yüklendiğinde URL hash'ine göre doğru sekmeyi göster
            const hash = window.location.hash.substring(1);
            if (hash) {
                showTab(hash, false);
            }
        });

        function addPhotoToGrid(photo) {
            const grid = document.getElementById('photosGrid');
            const photoCountEl = document.getElementById('photos-count');
            const noPhotosMessage = document.querySelector('.no-photos');
            if (noPhotosMessage) noPhotosMessage.style.display = 'none';

            const newCard = document.createElement('div');
            newCard.className = 'photo-card selectable';
            newCard.dataset.photoId = photo.id;
            newCard.innerHTML = `
                ${photo.featured ? '<div class="featured-badge"><i class="fas fa-star"></i></div>' : ''}
                <img src="/uploads/gallery/${photo.filename}" alt="${photo.title}">
                <div class="photo-info">
                    <h4>${photo.title || ''}</h4>
                    <p>${photo.description || ''}</p>
                    <small>Yüklenme: ${new Date(photo.uploadDate).toLocaleDateString('tr-TR')}</small>
                </div>
            `;
            
            grid.insertBefore(newCard, grid.firstChild);
            newCard.addEventListener('click', () => handlePhotoClick(newCard));
            
            const countText = photoCountEl.innerText;
            const currentCount = parseInt(countText.match(/\d+/)[0] || '0', 10);
            photoCountEl.innerText = `Mevcut Fotoğraflar (${currentCount + 1})`;
        }
        
        function handlePhotoManagementUpdate(action, photoIds) {
            if (action === 'delete') {
                const photoCountEl = document.getElementById('photos-count');
                let currentCount = parseInt(photoCountEl.innerText.match(/\d+/)[0], 10);
                photoIds.forEach(id => {
                    const card = document.querySelector(`.photo-card[data-photo-id='${id}']`);
                    if (card) {
                        card.style.transition = 'opacity 0.5s, transform 0.5s';
                        card.style.opacity = '0';
                        card.style.transform = 'scale(0.8)';
                        setTimeout(() => card.remove(), 500);
                        currentCount--;
                    }
                });
                photoCountEl.innerText = `Mevcut Fotoğraflar (${currentCount})`;
            } else if (action === 'updateFeatured') {
                 document.querySelectorAll('.photo-card .featured-badge').forEach(badge => badge.remove());
                 document.querySelectorAll('.photo-card').forEach(card => card.classList.remove('selected-featured'));
                photoIds.forEach(id => {
                    const card = document.querySelector(`.photo-card[data-photo-id='${id}']`);
                    if (card) {
                        const badge = document.createElement('div');
                        badge.className = 'featured-badge';
                        badge.innerHTML = '<i class="fas fa-star"></i>';
                        card.prepend(badge);
                    }
                });
            }
            cancelSelectionMode();
        }
    </script>
</body>
</html> 